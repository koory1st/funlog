name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  test-and-publish:
    name: Test and Publish to crates.io
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.VERSION }}
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Run tests
      run: cargo test --all-features

    - name: Run examples
      run: |
        chmod +x ./run_tests.sh
        ./run_tests.sh

    - name: Check if version matches tag
      id: version
      run: |
        CARGO_VERSION=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].version')
        TAG_VERSION=${GITHUB_REF#refs/tags/v}
        if [ "$CARGO_VERSION" != "$TAG_VERSION" ]; then
          echo "Version mismatch: Cargo.toml has $CARGO_VERSION but tag is $TAG_VERSION"
          exit 1
        fi
        echo "VERSION=$TAG_VERSION" >> $GITHUB_OUTPUT

    - name: Publish to crates.io
      run: |
        echo "Publishing version: $(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].version')"
        cargo publish --token ${{ secrets.CRATES_TOKEN }} --dry-run
        cargo publish --token ${{ secrets.CRATES_TOKEN }}

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: test-and-publish
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate changelog
      id: changelog
      run: |
        # Use version from previous job
        VERSION=${{ needs.test-and-publish.outputs.version }}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        
        # Generate changelog from git commits since last tag
        LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        if [ -n "$LAST_TAG" ]; then
          CHANGELOG=$(git log --pretty=format:"- %s" $LAST_TAG..HEAD)
        else
          CHANGELOG=$(git log --pretty=format:"- %s")
        fi
        
        # Create release notes
        cat > release_notes.md << EOF
        ## What's Changed
        
        $CHANGELOG
        
        ## Installation
        
        Add this to your \`Cargo.toml\`:
        
        \`\`\`toml
        [dependencies]
        funlog = "$VERSION"
        \`\`\`
        
        ## Documentation
        
        - [README (English)](https://github.com/koory1st/funlog/blob/v$VERSION/README_EN.md)
        - [README (中文)](https://github.com/koory1st/funlog/blob/v$VERSION/README.md)
        - [Examples](https://github.com/koory1st/funlog/tree/v$VERSION/examples)
        - [API Documentation](https://docs.rs/funlog/$VERSION)
        EOF

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        name: Release v${{ steps.changelog.outputs.VERSION }}
        body_path: release_notes.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}